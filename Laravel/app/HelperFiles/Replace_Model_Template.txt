//--- ROUTE -------------------------------------------

Route::resource('!ev!','!EV!Controller');
Route::get  ('/jongere/{jong_id}/!ev!/{nat_id}'             , ['as'=>'jongere.add!EV!','uses'=>'JongereController@add!EV!']);
Route::get  ('/jongere/{jong_id}/!ev!/{nat_id}/disconnect'  , ['as'=>'jongere.add!EV!','uses'=>'JongereController@disconnect!EV!']);



//--- CONTROLLER -------------------------------------------

<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\Http\Requests;
use App\Http\Controllers\Controller;
use App\!EV!;
use DB;

class !EV!Controller extends Controller

{
// -------------------------------------------------
//  INDEX
    public function index() {
// -------------------------------------------------
        $!mv! = DB::table('!mv!')->orderBy('omschrijving')->get();
        return view('!ev!.showall',compact('!mv!'));
    }

// -------------------------------------------------
//  CREATE
    public function create() {
// -------------------------------------------------
        $!mv! = DB::table('!mv!')->orderBy('omschrijving')->get();
        return view('!ev!.create',compact('!mv!'));
    }

// -------------------------------------------------
//  STORE
    public function store(Requests\!EV!Request $request) {
// -------------------------------------------------
        $!ev!  = !EV!::create($request->all());
        return redirect()->route('!ev!.show',$!ev!->id);
    }

// -------------------------------------------------
//  SHOW
    public function show($id) {
// -------------------------------------------------
        $!ev! = !EV!::find($id);
        return view('!ev!.show',compact('!ev!'));
    }

// -------------------------------------------------
//  EDIT
    public function edit($id) {
// -------------------------------------------------
        $!ev!=!EV!::findOrFail($id);
        $!mv! = DB::table('!mv!')->orderBy('omschrijving')->get();
        return view('!ev!.edit',compact('!ev!','!mv!'));
    }

// -------------------------------------------------
//  UPDATE
    public function update($id, Requests\!EV!Request $request) {
// -------------------------------------------------
        $!ev!=!EV!::findOrFail($id);

        $search_array = $request->all();
        if (!array_key_exists('priority', $search_array)) {
            $!ev!->priority="0";
        } else {
            $!ev!->priority="1";
        }
        $!ev!->omschrijving=$request->omschrijving;
        $!ev!->update();

        return redirect()->route('!ev!.show',$id);
    }

// -------------------------------------------------
//  DESTROY
    public function destroy($id) {
// -------------------------------------------------
        !EV!::destroy($id);
        return redirect()->route('!ev!.showall');
    }
}


//--- REQUEST -------------------------------------------


<?php

namespace App\Http\Requests;

use App\Http\Requests\Request;

class !EV!Request extends Request
{
    public function authorize()
    {
        return true;
    }

    public function rules()
    {
        $rules = [
            'omschrijving'=>'required'
        ];
        if (false)
        {
            $rules['eenAnderVeld'] = 'required';
        }
        return $rules;
    }
}


//--- MODEL -------------------------------------------

<?php

namespace App;

use Illuminate\Database\Eloquent\Model;

class !EV! extends Model
{
    protected $table = '!mv!';

    protected $fillable = [
        'omschrijving',
        'priority'
    ];
}

//--- MIGRATION -------------------------------------------

<?php

use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateTable!EV! extends Migration
{
    public function up()
    {
        Schema::create('!mv!', function (Blueprint $table) {
            $table->increments('id');
            $table->text('omschrijving');
            $table->boolean('priority');
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::drop('!mv!');
    }
}

//--- CREATE -----------------------------------------

@extends('staticPages.staticPage')

@section('content')
    <h1>Maak nieuwe !EV! aan</h1>
    {!! Form::open(['route' => '!ev!.store','name'=>'form_name']) !!}
    @include ('!ev!.form',['submitButtonText'=>'Maak'])
    {!! Form::close() !!}
    @include('errors.list')
@stop

//--- EDIT -------------------------------------------

@extends('staticPages.staticPage')

@section('content')
    <h1>Bewerk {!! $!ev!->omschrijving !!}</h1>
    {!! Form::model($!ev!,['method'=>'PATCH','action' => ['!EV!Controller@update',$!ev!->id],'name'=>'form_name']) !!}
    @include ('!ev!.form',['submitButtonText'=>'Pas aan'])
    {!! Form::close() !!}
    @include ('errors.list')
@stop

//--- FORM -------------------------------------------

<div class="form-group">
    {!! Form::label('omschrijving','Omschrijving (zoals in "Deze persoon is vader/moeder van de jongere.")') !!}
    <div class="input-group">
        {!! Form::text('omschrijving',null,['class'=>'form-control','onKeyUp'=>'javascript:obj1.bldUpdate();'])!!}
        <div class="input-group-btn">
            <a href="#" type="button" class="btn btn-default" id="btnEdit">
                <span class="glyphicon glyphicon-pencil" aria-hidden="false" aria-label="Aanpassen"></span>
            </a>
            <a href="#" type="button" class="btn btn-default" id="btnDel">
                <span class="glyphicon glyphicon-trash" aria-hidden="false" aria-label="Verwijderen"></span>
            </a>
            <a href="#" type="button" class="btn btn-default" id="btnShow">
                <span class="glyphicon glyphicon-search" aria-hidden="false" aria-label="Toon"></span>
            </a>
            <a href="{{route('!ev!.index')}}" type="button" class="btn btn-default" id="btnList">
                <span class="glyphicon glyphicon-list-alt" aria-hidden="false" aria-label="Alles oplijsten"></span>
                <span class="glyphicon glyphicon-arrow-up" aria-hidden="false" aria-label="Alles oplijsten"></span>
            </a>

        </div>
    </div>

    <select id="select_field" size=5 class="form-control" onMouseUp="javascript:obj1.copySelectedToInput();">
        @foreach ($!mv! as $!ev!)
            <option value="{{ $!ev!->id }}">
                {{ $!ev!->omschrijving }}
            </option>
        @endforeach
    </select>

</div>

<div class="form-group">
    {!! Form::label('priority','Zichtbaar:') !!}
    {!! Form::checkbox('priority', 1, null, ['class' => 'form-control']) !!}
</div>


<div class="fromgroup">
    <br \>
    {!! Form::submit($submitButtonText,['class'=>'form-control btn btn-primary','id'=>'btnSubmit']) !!}
</div>

<script language="javascript" type="text/javascript">
    /* Visit http://www.yaldex.com/ for full source code
     and get more free JavaScript, CSS and DHTML scripts! */
    <!-- Begin
    function SelObj(formName,selectField,entryField,className,str) {
        this.formName = formName;
        this.selectField = selectField;
        this.enteryField = entryField;
        this.select_str = str || '';
        this.selectArr = new Array();
        this.initialize = initialize;
        this.bldInitial = bldInitial;
        this.bldUpdate = bldUpdate;
        this.copySelectedToInput = copySelectedToInput;
        this.className = className;
    }

    function initialize() {
        document.getElementById('btnDel').style.display = 'none';
        document.getElementById('btnEdit').style.display = 'none';
        document.getElementById('btnShow').style.display = 'none';

        if (this.select_str =='') {
            for(var i=0;i<document.forms[this.formName][this.selectField].options.length;i++) {
                this.selectArr[i] = document.forms[this.formName][this.selectField].options[i];
                this.select_str += document.forms[this.formName][this.selectField].options[i].value+":"+
                document.forms[this.formName][this.selectField].options[i].text+",";
            }
        }
        else {
            var tempArr = this.select_str.split(',');
            for(var i=0;i<tempArr.length;i++) {
                var prop = tempArr[i].split(':');
                this.selectArr[i] = new Option(prop[1],prop[0]);
            }
        }

    }
    function bldInitial() {
        this.initialize();
        document.forms[this.formName][this.selectField].style.display = 'none';
        for(var i=0;i<this.selectArr.length;i++)
            document.forms[this.formName][this.selectField].options[i] = this.selectArr[i];
        document.forms[this.formName][this.selectField].options.length = this.selectArr.length;

    }

    function bldUpdate() {
        var str = document.forms[this.formName][this.enteryField].value.replace('^\\s*','');
        if(str == '') {
            this.bldInitial();
            return;
        }

        document.forms[this.formName][this.selectField].style.display = 'block';
        this.initialize();
        // j = the amount of matches
        var j = 0;
        pattern1 = new RegExp(str,"i");
        for(var i=0;i<this.selectArr.length;i++) {
            if (pattern1.test(this.selectArr[i].text)) {
                document.forms[this.formName][this.selectField].options[j++] = this.selectArr[i];
            }
        }
        document.forms[this.formName][this.selectField].options.length = j;
        // if j=0 then there are no matches... select field can be removed
        if(j==0){
            document.forms[this.formName][this.selectField].style.display = 'none';
            //document.getElementById('btnSubmit').style.display = 'block';
        } else {
            document.forms[this.formName][this.selectField].style.display = 'block';

        }
    }
    function setUp() {
        obj1 = new SelObj('form_name','select_field','omschrijving','!ev!');
        //    form_name = the name of the form you use
        // select_field = the name of the select pulldown menu you use
        //  entry_field = the name of text box you use for typing in
        obj1.bldInitial();
    }
    function copySelectedToInput() {
        var e = document.forms[this.formName][this.selectField];
        var selectedId = (e.options[e.selectedIndex].value);
        var selectedName = (e.options[e.selectedIndex].text);

        document.forms[this.formName][this.enteryField].value=selectedName;
        document.forms[this.formName][this.selectField].style.display = 'none';
        document.getElementById('btnSubmit').style.display = 'none';
        document.getElementById('btnDel').style.display = 'inline-block';
        document.getElementById('btnEdit').style.display = 'inline-block';
        document.getElementById('btnShow').style.display = 'inline-block';
        document.getElementById('btnDel').setAttribute('href','/'+this.className+'/'+selectedId+'/destroy');
        document.getElementById('btnEdit').setAttribute('href','/'+this.className+'/'+selectedId+'/edit');
        document.getElementById('btnShow').setAttribute('href','/'+this.className+'/'+selectedId);
    }
    window.onload=setUp;
    //  End -->
</script>


//--- SHOW -------------------------------------------

@extends('staticPages.staticPage')

@section('content')
    <div class="page-header">
        <h1>{{ $!ev!->omschrijving }}
            <small>
                <span class="zichtbaar{{$!ev!->priority}}">Zichtbaar</span>
                <span class="onzichtbaar{{$!ev!->priority}}">Onzichtbaar</span>
                <a href="/!ev!/{{$!ev!->id}}/edit" type="button" class="btn btn-primary" id="btnEditJongere">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="false" aria-label="Aanpassen"></span>
                </a>
                <a href="/!ev!" type="button" class="btn btn-primary" id="btnList">
                    <span class="glyphicon glyphicon-list-alt" aria-hidden="false" aria-label="Lijst"></span>
                    <span class="glyphicon glyphicon-arrow-up" aria-hidden="false" aria-label="Lijst"></span>
                </a>
                <a href="/!ev!/{{$!ev!->id}}/destroy" type="button" class="btn btn-danger" id="btnDel">
                    <span class="glyphicon glyphicon-trash" aria-hidden="false" aria-label="Verwijder"></span>
                </a>
            </small>
        </h1>
    </div>
    <style>
        .zichtbaar1,.onzichtbaar0{display:inline}
        .zichtbaar0,.onzichtbaar1{display:none}
    </style>
@stop

//--- SHOWALL ----------------------------------------

@extends('staticPages.staticPage')

@section('content')



        <h1>Lijst Extra info
            <small>
                <a href="{{route('!ev!.create')}}" type="button" class="btn btn-primary" id="btnAdd">
                    <span class="glyphicon glyphicon-plus" aria-hidden="false" aria-label="Maken"></span>
                </a>
            </small>
        </h1>
        @unless(!$!mv!)
        <div class="row">
            <div class="col-lg-12">
                <p>!ev!</p>
            </div>
        </div>
        <div class="row">
            <div class="table-responsive">
                <table class="table">
                    <tr>
                        <th>Omschrijving</th>
                        <th>Zichtbaar</th>
                    </tr>

            @foreach ($!mv! as $!ev!)
                <tr>
                <td>
                    <a href="{{ route('!ev!.show', $!ev!->id) }}">
                        {{ $!ev!->omschrijving }}
                    </a>
                </td>
                <td>
                        <span class="zichtbaar{{$!ev!->priority}}">
                            <span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span>
                        </span>
                        <span class="onzichtbaar{{$!ev!->priority}}">
                            <span class="glyphicon glyphicon-eye-close" aria-hidden="true"></span>
                        </span>
               </td>
            </div>
                </tr>
            @endforeach
                </table>
            </div>
        </div>
        <style>
            .zichtbaar1,.onzichtbaar0{display:inline}
            .zichtbaar0,.onzichtbaar1{display:none}
        </style>


    @endunless

@stop



